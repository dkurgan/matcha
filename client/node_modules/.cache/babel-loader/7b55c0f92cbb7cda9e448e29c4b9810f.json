{"ast":null,"code":"import api from '../api';\nimport { ActionTypes } from './types';\nexport const loginUser = user => async dispatch => {\n  const {\n    password,\n    username\n  } = user;\n  const token = await api.post('/auth/login', {\n    password,\n    username\n  });\n  localStorage.setItem('tinderbae-token', token.data);\n  dispatch({\n    type: ActionTypes.LOGIN\n  });\n};\nexport const logOutUser = () => {\n  localStorage.removeItem('tibderbae-token');\n  return {\n    type: ActionTypes.LOGOUT\n  };\n};\nexport const registerUser = userData => async dispatch => {\n  const token = await api.post('/auth/register', userData);\n\n  if (token) {\n    localStorage.setItem('tinderbae-token', token.data);\n  }\n\n  dispatch({\n    type: ActionTypes.REGISTER\n  });\n};\nexport const updateUser = user => async dispatch => {\n  const update = await api.patch('/user/delete');\n};","map":{"version":3,"sources":["/Users/danila/Documents/Web_Development/Matcha/client/src/actions/auth.ts"],"names":["api","ActionTypes","loginUser","user","dispatch","password","username","token","post","localStorage","setItem","data","type","LOGIN","logOutUser","removeItem","LOGOUT","registerUser","userData","REGISTER","updateUser","update","patch"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AAEA,SAAmBC,WAAnB,QAAoD,SAApD;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAoB,MAAOC,QAAP,IAA8B;AACvE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,IAA/B;AACA,QAAMI,KAAK,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,aAAT,EAAwB;AACxCH,IAAAA,QADwC;AAExCC,IAAAA;AAFwC,GAAxB,CAApB;AAIAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCH,KAAK,CAACI,IAA9C;AACAP,EAAAA,QAAQ,CAAE;AACNQ,IAAAA,IAAI,EAAEX,WAAW,CAACY;AADZ,GAAF,CAAR;AAGH,CAVM;AAYP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5BL,EAAAA,YAAY,CAACM,UAAb,CAAwB,iBAAxB;AACA,SAAQ;AACJH,IAAAA,IAAI,EAAEX,WAAW,CAACe;AADd,GAAR;AAGH,CALM;AAOP,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAA4B,MAAOd,QAAP,IAA8B;AAClF,QAAMG,KAAK,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,gBAAT,EAA2BU,QAA3B,CAApB;;AACA,MAAIX,KAAJ,EAAW;AACPE,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCH,KAAK,CAACI,IAA9C;AACH;;AACDP,EAAAA,QAAQ,CAAC;AACLQ,IAAAA,IAAI,EAAEX,WAAW,CAACkB;AADb,GAAD,CAAR;AAGH,CARM;AAUP,OAAO,MAAMC,UAAU,GAAIjB,IAAD,IAAoB,MAAOC,QAAP,IAA8B;AACxE,QAAMiB,MAAM,GAAG,MAAMrB,GAAG,CAACsB,KAAJ,CAAU,cAAV,CAArB;AACH,CAFM","sourcesContent":["import api from '../api';\nimport { Dispatch } from 'redux';\nimport { userAuth, ActionTypes, userRegister } from './types';\n\nexport const loginUser = (user: userAuth) => async (dispatch: Dispatch) => {\n    const { password, username } = user;\n    const token = await api.post('/auth/login', {\n        password,\n        username\n    });\n    localStorage.setItem('tinderbae-token', token.data);\n    dispatch ({\n        type: ActionTypes.LOGIN\n    })\n}\n\nexport const logOutUser = () => {\n    localStorage.removeItem('tibderbae-token');\n    return ({\n        type: ActionTypes.LOGOUT\n    })\n}\n\nexport const registerUser = (userData: userRegister) => async (dispatch: Dispatch) => {\n    const token = await api.post('/auth/register', userData);\n    if (token) {\n        localStorage.setItem('tinderbae-token', token.data);\n    }\n    dispatch({\n        type: ActionTypes.REGISTER\n    })\n}\n\nexport const updateUser = (user: userAuth) => async (dispatch: Dispatch) => { \n    const update = await api.patch('/user/delete');\n}"]},"metadata":{},"sourceType":"module"}